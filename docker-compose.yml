#version a usar es la 3.3
version: '3.3'
#servicios que vamos a desplegar,servicio web
#construye en base a la carpeta app que llamamos
#command ejecuta proyecto en puerto 8000
#volumes para las carpetas static,media,app
#para que no se pierda esos archivos
#configuramos puerto externo 80e interno 8000
#depende de otra servicio contenedor mysql
#usara las variables de entorno en .env que hicimos
#creamos una IP 
services:
  web:
    container_name: edshop.web
    build: ./app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app:/usr/src/app/
      - ./app/static:/usr/src/app/static
      - media_volume:/usr/src/app/media
    ports:
      - 80:8000
    depends_on:
      - mysql
    env_file:
      - ./app/.env
    networks:
      local_network:
        ipv4_address: 172.28.1.4

  mysql:
    image: mysql:latest
    container_name: edshop.mysql
    volumes:
      - db_data:/var/lib/mysql:rw
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      MYSQL_ROOT_PASSWORD: 'qwerty123'
      MYSQL_DATABASE: 'db_edshop'
    ports:
      - "3306:3306"
    networks:
      local_network:
        ipv4_address: 172.28.1.5
volumes:
  static_volume:
  media_volume:
  db_data:

networks:
  local_network:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16